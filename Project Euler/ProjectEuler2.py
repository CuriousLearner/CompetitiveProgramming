#! /usr/bin/env python

'''
Project Euler 2 (https://projecteuler.net/problem=2)

Even Fibonacci Numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
from math import sqrt

def is_perfect_square(n):
    n_ = int(sqrt(n))
    return (n_ * n_ == n)

def is_fib(n):
    return is_perfect_square(5 * n * n + 4) or is_perfect_square(5 * n * n - 4)

res = 0
for i in range(4000000):
    if is_fib(i) and i % 2 == 0:
        res += i

print(res)
